#!/usr/bin/python

import threading
import Queue
import time

class WorkerThread(threading.Thread) : # Subclass of threading.Thread (Workerclass which fetches tasks from this queue and executes them)

	def __init__(self, queue) : # Constructor takes the input queue
		threading.Thread.__init__(self)
		self.queue = queue

	def run(self) : # This function can be anything 
		print "In WorkerThread"
		while True :
			counter = self.queue.get()
			print "Ordered to sleep for %d seconds!"%counter
			time.sleep(counter)
			print "Finished sleeping for %d seconds"%counter
			self.queue.task_done()

queue = Queue.Queue() # Creating a new queue

for i in range(10) : # Creating a bunch of worker threads
	print "Creating WorkerThread : %d"%i
	worker = WorkerThread(queue)
	worker.setDaemon(True)
	worker.start()
	print "WorkerThread %d Created!"%i

for j in range (10): # Putting the worker threads in the queue
	queue.put(j)

queue.join() # Waits for the task queue to be empty

print "All tasks over!"